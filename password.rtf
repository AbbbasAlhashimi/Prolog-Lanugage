group selection b,c,e,g,h,n,o,r,f,a,p,s,t,w.

rule ask_word
if word is unknown
then ask word .
question word_option
check first letters of word_option? ;
choose from selection
because i need to defuse the bomb.



/* Compare entries */
rule be
if word_option is b
then write(‘below')
and nl .

rule co
if word_option is c
then write(‘could')
and nl .

rule ev
if word_option is e
then write(‘every')
and nl .

rule gr
if word_option is g
then write(‘great')
and nl .

rule ho
if word_option is h
then write(‘house')
and nl .

rule ne
if word_option is n
then write(‘neve')
and nl .

rule ot
if word_option is o
then write(‘other')
and nl .

rule ri
if word_option is r
then write(‘right')
and nl .

rule fx
if word_option is f
then write('The Requested word_option is either[first] or [found]')
and nl .

rule ax
if word_option is a
then write('The Requested word_option is either[about] or [after] or [again]')
and nl .

rule px
if word_option is p
then write('The Requested word_option is either[place] or [plant] or [point]')
and nl .

rule sx
if word_option is s
then write('The Requested word_option is either[small] or [sound] or [spell] or [still] or [study]')
and nl .

rule tx
if word_option is t
then write('The Requested word_option is either[their] or [there] or [these] or [thing] or [think] or [three]')
and nl .

rule wx
if word_option is w
then write('The Requested word_option is either[water] or [where] or [which] or [world] or [would] or [write]')
and nl .



/* start the program */
ruleset instructions
contains all rules ;
select rule using first come first served ;
update ruleset by removing each selected rule ;
initiate by doing restart .
action go
do invoke ruleset instructions .







